# Generated by Django 5.2.4 on 2025-08-05 15:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.migrations.operations.models import CreateModel


class CreateModelIfNotExists(CreateModel):
    """CreateModel operation that only creates the table if it doesn't exist."""

    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        try:
            super().database_forwards(app_label, schema_editor, from_state, to_state)
        except Exception as e:
            error_msg = str(e).lower()
            if any(keyword in error_msg for keyword in ['already exists', 'duplicate', 'constraint']):
                # Table or constraints already exist, skip silently
                pass
            else:
                # Unexpected error, re-raise
                raise
        # State is updated by the operation's state_forwards method


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        CreateModelIfNotExists(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('exercise_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['exercise_number'],
            },
        ),
        CreateModelIfNotExists(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.PositiveIntegerField()),
                ('reps', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='workouts.exercise')),
            ],
            options={
                'ordering': ['set_number'],
            },
        ),
        CreateModelIfNotExists(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_number', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', 'workout_number'],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='workout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='workouts.workout'),
        ),
    ]
