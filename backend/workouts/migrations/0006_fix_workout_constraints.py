# Generated by Django 5.2.4 on 2025-10-09 22:53

from django.db import migrations, models
from django.db.migrations.operations.models import AddConstraint


class AddConstraintIfNotExists(AddConstraint):
    """AddConstraint operation that only adds the constraint if it doesn't exist."""

    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        try:
            super().database_forwards(app_label, schema_editor, from_state, to_state)
        except Exception:
            # If constraint already exists, skip silently
            pass
        # State is updated by the operation's state_forwards method


class Migration(migrations.Migration):

    dependencies = [
        ('workouts', '0005_exercise_weight_change_preference_and_more'),
    ]

    operations = [
        # Add the unique constraints that are defined in the model Meta classes
        AddConstraintIfNotExists(
            model_name='exercise',
            constraint=models.UniqueConstraint(fields=('workout', 'exercise_number'), name='unique_exercise_number_per_workout'),
        ),
        AddConstraintIfNotExists(
            model_name='set',
            constraint=models.UniqueConstraint(fields=('exercise', 'set_number'), name='unique_set_number_per_exercise'),
        ),
        AddConstraintIfNotExists(
            model_name='workout',
            constraint=models.UniqueConstraint(fields=('user', 'workout_number'), name='unique_workout_number_per_user'),
        ),
    ]
