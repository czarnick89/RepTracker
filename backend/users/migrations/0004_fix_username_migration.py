# Generated by Django 5.2.4 on 2025-10-09 22:36

from django.db import migrations


def remove_username_if_exists(apps, schema_editor):
    """
    Safely remove username column if it exists.
    This handles the case where the production database was created
    with a custom User model that doesn't have the username field.
    """
    db = schema_editor.connection
    table_name = 'users_user'
    column_name = 'username'

    # Check if the column exists
    with db.cursor() as cursor:
        cursor.execute("""
            SELECT column_name
            FROM information_schema.columns
            WHERE table_name = %s AND column_name = %s
        """, [table_name, column_name])

        if cursor.fetchone():
            # Column exists, remove it
            schema_editor.remove_field('users', 'User', 'username')


def reverse_remove_username_if_exists(apps, schema_editor):
    """
    Reverse migration - add username column back if needed.
    """
    # For reverse migration, we don't need to do anything
    # since the username field was never supposed to be there
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_user_google_access_token_user_google_refresh_token_and_more'),
    ]

    operations = [
        migrations.RunPython(
            remove_username_if_exists,
            reverse_remove_username_if_exists
        ),
    ]
