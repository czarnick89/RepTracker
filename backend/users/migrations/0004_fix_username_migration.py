# Generated by Django 5.2.4 on 2025-10-09 22:36

from django.db import migrations


def remove_username_if_exists(apps, schema_editor):
    """
    Safely remove username column if it exists.
    This handles the case where the production database was created
    with a custom User model that doesn't have the username field.
    Works with both SQLite and PostgreSQL.
    """
    db = schema_editor.connection
    table_name = 'users_user'
    column_name = 'username'

    # Check if the column exists using database-agnostic approach
    with db.cursor() as cursor:
        db_vendor = db.vendor

        if db_vendor == 'postgresql':
            # PostgreSQL approach
            cursor.execute("""
                SELECT column_name
                FROM information_schema.columns
                WHERE table_name = %s AND column_name = %s
            """, [table_name, column_name])
        elif db_vendor == 'sqlite':
            # SQLite approach - check sqlite_master table
            cursor.execute("""
                PRAGMA table_info(users_user)
            """)
            columns = cursor.fetchall()
            # Check if username column exists in the results
            column_exists = any(col[1] == 'username' for col in columns)
        else:
            # For other databases, assume column exists to be safe
            column_exists = True

        # For PostgreSQL, check if we got a result
        if db_vendor == 'postgresql':
            column_exists = cursor.fetchone() is not None

        if column_exists:
            # Column exists, remove it
            # Get the User model and the username field
            User = apps.get_model('users', 'User')
            username_field = User._meta.get_field('username')
            schema_editor.remove_field(User, username_field)


def reverse_remove_username_if_exists(apps, schema_editor):
    """
    Reverse migration - add username column back if needed.
    """
    # For reverse migration, we don't need to do anything
    # since the username field was never supposed to be there
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_user_google_access_token_user_google_refresh_token_and_more'),
    ]

    operations = [
        migrations.RunPython(
            remove_username_if_exists,
            reverse_remove_username_if_exists
        ),
    ]
